using System;

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("It's a beautiful day in the city of Adenasa.");
        Console.WriteLine("The last day of the month of Leaffall, today is the celebration of the Foxlight Festival.");
        Console.WriteLine("Tonight when the world goes dark, an iridescent light in the shape of a fox will fill the sky.");
        Console.WriteLine("Everyone gathered in the city will watch in wonder and awe at the magic that fills the realm of Krysmanthia.");
        FoxlightFestival.Stargaze();
        FoxlightFestival.HideAndSeek();
        FoxlightFestival.Puzzle();
    	FoxlightFestival.Lantern();
        FoxlightFestival.Charades();
    }
}



public class FoxlightFestival
{
    static int RollD20()
    {
        Random random = new Random();
        int result = random.Next(1, 21);
        Console.WriteLine("You rolled: " + result);
        return result;
    }

    public static void Stargaze()
    {
        Console.WriteLine("\n   As a part of the festival, a local astronomer has set up a makeshift observatory, offering stargazing sessions.");
        Console.WriteLine("   A cluster of telescopes, their lenses gleaming in the moonlight, points skyward, inviting eager stargazers to peer into the cosmos.");
        Console.WriteLine("   The astronomer, a figure of quiet intensity, stands beside a chalkboard adorned with celestial diagrams, ready to unravel the mysteries of the night sky.");
        Console.WriteLine("\n   Would you like to stargaze? yes or no?");
        
        string response;
        while (true)
        {
            response = Console.ReadLine();
            if (response.Equals("yes", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("Making a Perception Check...");
                Console.WriteLine("Rolling...");
                int perception = RollD20();
                if (perception < 12)
                {
                    Console.WriteLine("The sky is beautiful but you don't see any constellations.");
                }
                else if (perception == 12 || perception == 13)
                {
                    Console.WriteLine("You see the Twilight Serpent. A long, winding constellation resembling a serpent with iridescent scales. It is associated with mysteries and hidden knowledge.");
                }
                else if (perception == 14 || perception == 15)
                {
                    Console.WriteLine("You see the Starfall Cascade. A dazzling meteor shower that appears as a cascade of shimmering stars. It's believed to be the leftover memory of a long-forgotten fallen angel.");
                }
                else if (perception == 16 || perception == 17)
                {
                    Console.WriteLine("You see the Dragon's Eclipse. A complex alignment of stars that forms the shape of a dragon partially eclipsing the moon. It is said to foretell the awakening of an ancient dragon or a great conflict.");
                }
                else if (perception == 18 || perception == 19)
                {
                    Console.WriteLine("You see the Aurora Phoenix. An incredibly rare celestial event that occurs just before the Foxlight's arrival. It resembles a blazing phoenix in the twilight sky, seemingly heralding the imminent arrival of the Foxlights.");
                }
                else if (perception == 20)
                {
                    Console.WriteLine("You see the constellation the Fox's Tail. This constellation resembles a graceful fox with its tail extended. It's said to represent the Foxlights themselves and is associated with good fortune and protection.");
                }
                break;
            }
            else if (response.Equals("no", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("You move on to the next part of the festival");
                break;
            }
            else
            {
                Console.WriteLine("Sorry, that's an invalid response. Please try again.");
            }
        }
    }
    public static void HideAndSeek()
    {
        Console.WriteLine("While you are enjoying the festival, a little Firbolg girl in a yellow dress pulls on your sleeve.");
        Console.WriteLine("She asks you \"Will you play hide and seek with me?\" (yes/no)");
        string response;

        while (true)
        {
            response = Console.ReadLine();

            if (response.Equals("yes", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("She gives a huge smile. \"Great! Do you want to hide or seek?\" ");
                string hideOrSeek;

                while (true)
                {
                    hideOrSeek = Console.ReadLine();

                    if (hideOrSeek.Equals("hide", StringComparison.OrdinalIgnoreCase))
                    {
                        Console.WriteLine("She nods \"Okay! I'll seek.\" She turns around, covering her eyes and starts counting.");
                        Console.WriteLine("Making a Stealth Check...");
                        Console.WriteLine("Rolling...");
                        int perception = RollD20();

                        if (perception < 12)
                        {
                            Console.WriteLine("You watch from your hiding place as the little girl looks high and low for you. She looks for a few minutes before calling out. \"Olly olly oxen free! I give up, you win.\" And you come out of your hiding spot.");
                            Console.WriteLine("She races over to you. \"That was a good hiding place! Thank you for playing with me.\"");
                        }
                        else
                        {
                            Console.WriteLine("After looking for a few moments Emily finds you in your hiding place. \"I got you!\"");
                        }
                        break;
                    }
                    else if (hideOrSeek.Equals("seek", StringComparison.OrdinalIgnoreCase))
                    {
                        Console.WriteLine("She nods \"Okay! I'll hide.\" You turn around, covering your eyes and start counting. After reaching 20 you uncover your eyes, turn around, and start looking.");
                        Console.WriteLine("Making a Perception Check...");
                        Console.WriteLine("Rolling...");
                        int perception = RollD20();

                        if (perception > 12)
                        {
                            Console.WriteLine("You look for a few moments before finding her hiding behind a bench. She moans \"Awwww, you got me!\"");
                        }
                        else
                        {
                            Console.WriteLine("You look high and low for her but are unable to find her before giving up and calling out \"All right, I give up!\"");
                            Console.WriteLine("She jumps out from behind a bench and yells out \"Boo! I win!\"");
                        }
                        break;
                    }
                    else
                    {
                        Console.WriteLine("Invalid response, please try again.");
                        continue;
                    }
                }
        
                Console.WriteLine("Just then her mother comes over. \"There you are Emily, I was looking all over for you.\"");
                Console.WriteLine("She looks up at her mother \"I was just playing hide and seek.\"");
                Console.WriteLine("Emily's mother looks to you. \"Thank you for playing with her, but we have to go. Have a nice day!\"");
            }
            else if (response.Equals("no", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("You move on to the next part of the festival");
                break;
            }
            else
            {
                Console.WriteLine("Sorry, that's an invalid response. Please try again.");
                continue;
            }
        }
    }

    public static void Puzzle()
    {
        Console.WriteLine("\n\n As you wander the festival grounds, you notice a group of excited festival-goers gathered around a colorful tent.");
        Console.WriteLine("Inside, you find a puzzle master challenging people to solve three intricate manipulative puzzles related to the Foxlights.");
        Console.WriteLine("The reward? A small glowing crystal that temporarily grants a bonus to Intelligence checks.");
        Console.WriteLine("Would you like to play? Cost is 5 silver pieces (yes/no) ");
        string response;
        while (true)
        {
            response = Console.ReadLine();
            if (response.Equals("yes", StringComparison.OrdinalIgnoreCase))
            {
                // Take 5 silver pieces
        		Console.WriteLine("\n Making an Intelligence Check...");
                Console.WriteLine("Rolling...");
                int intelligence = RollD20();
                if (intelligence > 10)
                {
                    Console.WriteLine("\n The puzzle master checks your work and smiles. \" Good job! You got it! On to the next one! \" ");
                    Console.WriteLine("Making an Intelligence Check...");
                    Console.WriteLine("Rolling...");
                    intelligence = RollD20();
                    if (intelligence > 12)
                    {
                        Console.WriteLine("\n The puzzle master checks your work and claps his hands. \" Another great job! You got it! On to the next one! \" ");
                        Console.WriteLine("Making an Intelligence Check...");
                        Console.WriteLine("Rolling...");
                        intelligence = RollD20();
                        if (intelligence > 15)
                        {
                            Console.WriteLine("\n The puzzle master checks your work. \" Unbelievable! You got it! You won the challenge. Here is your prize. \" ");
                            // Add crystal to inventory
                            break;
                        }
                        else
                        {
                            Console.WriteLine("\n The puzzle master shakes his head. \" Time's up! Sorry, but looks like you weren't able to figure it out. Have a nice day! \" ");
                            break;
                        }
                    }
                    else
                    {
                        Console.WriteLine("\n The puzzle master shakes his head. \" Time's up! Sorry, but looks like you weren't able to figure it out. Have a nice day! \" ");
                        break;
                    }
                }
                else
                {
                    Console.WriteLine("\n The puzzle master shakes his head. \" Time's up! Sorry, but looks like you weren't able to figure it out. Have a nice day! \" ");
                    break;
                }
            }
            else if (response.Equals("no", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("\n You move on to the next part of the festival");
                break;
            }
            else
            {
                Console.WriteLine("\n Sorry, that's an invalid response. Please try again.");
                continue;
            }
        }
    }

    public static void Lantern()
    {
        Console.WriteLine("\n\n Nearby, a stall is offering lanterns designed to mimic the Foxlights.");
        Console.WriteLine(" For a small fee, you can purchase a lantern and try your hand at painting it.");
        
    Start:
        Console.WriteLine("Would you like to buy a lantern? Cost is 5 silver pieces (yes/no) ");
        string response;
        while (true)
        {
            response = Console.ReadLine();
            if (response.Equals("yes", StringComparison.OrdinalIgnoreCase))
            {
                // Take 5 silver pieces
                Console.WriteLine("\n Making a Sleight of Hand Check...");
                Console.WriteLine("Rolling...");
                int SleightOfHand = RollD20();
                if (SleightOfHand > 12)
                {
                    Console.WriteLine("\n The woman selling the lanterns, a human with kinky curly brown hair and paint over her clothes comes over to you.");
                    Console.WriteLine(" \"Very good job! \" She takes the lantern and sprinkle a glittering dust over the wet paint. \" There, now your lantern will last longer and help you see better than a normal lantern. \" ");
                    Console.WriteLine(" You receive a magic Foxlight lantern. This lantern is a magical light source that doesn't run out of oil and grants advantage on Perception checks in dark areas for the duration of the festival.");
                    // Add lantern to inventory
                }
                else
                {
                    Console.WriteLine("\n The woman selling the lanterns, a human with kinky curly brown hair and paint over her clothes comes over to you.");
                    Console.WriteLine(" She shakes her head and grins. \" Well... that sure is... something. I'm sure you at least had fun. Feel free to buy another and try again.\" ");
                    goto Start;
                }
            }
            else if (response.Equals("no", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("\n You move on to the next part of the festival");
                break;
            }
            else
            {
                Console.WriteLine("\n Sorry, that's an invalid response. Please try again.");
                continue;
            }
        }
    }

    public static void Charades()
    {
        Console.WriteLine("While you are enjoying the festival, you see a lively group of festival-goers.");
        Console.WriteLine("A man in with a mask of an exaggerated smile comes up to you. \" How about you? Would you like to play a game of Foxlight Charades? \" (yes/no)");
        string response;
    
        while (true)
        {
            response = Console.ReadLine();
    
            if (response.Equals("yes", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine(" \" Would you like to (1) act something out, or (2) take a guess? \"");
                string actOrGuess;
    
                while (true)
                {
                    actOrGuess = Console.ReadLine();
    
                    if (actOrGuess.Equals("1"))
                    {
                        Console.WriteLine("The man claps his hands. \" Very well! Just go ahead and pull a clue out of the bowl here: \" ");
                        Console.WriteLine("You put your hand in and pull out a piece of paper that says \" Fox \" Time to act it out!");
                        Console.WriteLine("Making a Performance Check...");
                        Console.WriteLine("Rolling...");
                        int performance = RollD20();
    
                        if (performance < 12)
                        {
                            Console.WriteLine(" Try as you might no one can guess what you are acting out. The timer goes off and the man with the mask says \" Awww chucks. I wish you better luck in the future. \" ");
                            break;
                        }
                        else
                        {
                            Console.WriteLine(" You act it out and the man in the mask snaps his fingers. \" I got it! You're a fox! \" ");
                            Console.WriteLine("Congratulations! As your prize you win this charming tailsman.");
                            Console.WriteLine("This talisman shows two masks, one smiling and one frowning. It will grant you advantage on Charisma checks for the remainder of the day.");
                            // Add talisman to inventory
                            break;
                        }
                    }
                    else if (actOrGuess.Equals("2", StringComparison.OrdinalIgnoreCase))
                    {
                        Console.WriteLine("Perfect! The man in the mask says. I'll act out something and you guess! ");
                        Console.WriteLine("He then begins to act out something...");
                        Console.WriteLine("Making an Insight Check...");
                        Console.WriteLine("Rolling...");
                        int insight = RollD20();
    
                        if (insight < 12)
                        {
                            Console.WriteLine(" You guess \" A fox \" and the man in the mask claps his hands. \" Wonderful job! You guessed correctly! As your prize you win this charming talisman. \" ");
                            Console.WriteLine("This talisman shows two masks, one smiling and one frowning. It will grant you advantage on Charisma checks for the remainder of the day.");
                            // Add talisman to inventory
                            break;
                        }
                        else
                        {
                            Console.WriteLine(" You make a few wrong guesses before the man in the mask sighs and says \" Unfortunately you did not succeed. I wish you will on future endeavors! \" ");
                            break;
                        }
                    }
                    else
                    {
                        Console.WriteLine("Invalid response, please try again.");
                        continue;
                    }
                }
            }
            else if (response.Equals("no", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("You move on to the next part of the festival");
                break;
            }
            else
            {
                Console.WriteLine("Sorry, that's an invalid response. Please try again.");
                continue;
            }
        }
    }
}